<?xml version="1.0" encoding="utf-8"?>
<Project>

	<PropertyGroup>
		<Authors>Microsoft</Authors>
		<Owners>Microsoft</Owners>
		<Copyright>Â© Microsoft Corporation. All rights reserved.</Copyright>
		<RepositoryUrl>https://github.com/microsoft/dev-tunnels-ssh.git</RepositoryUrl>
		<PackageProjectUrl>https://github.com/microsoft/dev-tunnels-ssh/blob/main/README.md</PackageProjectUrl>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<LangVersion>10.0</LangVersion>
		<Configuration Condition="'$(Configuration)'==''">Debug</Configuration>
		<BaseOutputPath>$(SshRootDirectory)out/</BaseOutputPath>
		<OutputPath>$(BaseOutputPath)bin/$(Configuration)/$(MSBuildProjectName)/</OutputPath>
		<PackageOutputPath>$(BaseOutputPath)pkg/</PackageOutputPath>
		<SymbolsOutputPath>$(BaseOutputPath)sym/</SymbolsOutputPath>
		<BaseIntermediateOutputPath>$(BaseOutputPath)obj/$(MSBuildProjectName)/</BaseIntermediateOutputPath>
		<IntermediateOutputPath>$(BaseIntermediateOutputPath)$(Configuration)/</IntermediateOutputPath>
		<AppendTargetFrameworkToOutputPath>true</AppendTargetFrameworkToOutputPath>

		<IncludeSymbols>true</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>

		<NuGetPackageRoot Condition="'$(NuGetPackageRoot)' == ''">$(NUGET_PACKAGES)</NuGetPackageRoot>
		<NuGetPackageRoot Condition="'$(NuGetPackageRoot)' == '' AND '$(OS)' == 'Windows_NT'">$(UserProfile)\.nuget\packages\</NuGetPackageRoot>
		<NuGetPackageRoot Condition="!HasTrailingSlash('$(NuGetPackageRoot)') AND '$(OS)' == 'Windows_NT'">$(NuGetPackageRoot)\</NuGetPackageRoot>
		<NuGetPackageRoot Condition="'$(NuGetPackageRoot)' == '' AND '$(OS)' != 'Windows_NT'">$(HOME)/.nuget/packages/</NuGetPackageRoot>
		<NuGetPackageRoot Condition="!HasTrailingSlash('$(NuGetPackageRoot)') AND '$(OS)' != 'Windows_NT'">$(NuGetPackageRoot)/</NuGetPackageRoot>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="MicroBuild.Core" Version="0.3.1" PrivateAssets="All" ExcludeAssets="Runtime" />
		<PackageReference Include="Nerdbank.GitVersioning" Version="3.5.113" PrivateAssets="All" />

		<!-- All projects need to be rebuilt if the version changes. -->
		<Content Include="$(SshRootDirectory)/version.json" Link="version.json">
			<CopyToOutputDirectory>DoNotCopy</CopyToOutputDirectory>
			<Visible>false</Visible><!-- Hide from VS solution explorer -->
			<Pack>false</Pack> <!--Exclude from NuGet packages -->
		</Content>

		<!-- The generated XML doc file is already in the target directory. Don't show it in the source directory. -->
		<None Remove="$(AssemblyName).xml" />
	</ItemGroup>

	<PropertyGroup>
		<DotNetStandard20 Condition="'$(TargetFramework)'=='netstandard2.0' OR '$(TargetFramework)'=='netcoreapp2.1'">true</DotNetStandard20>
		<DotNetStandard21 Condition="'$(TargetFramework)'=='netstandard2.1' OR '$(TargetFramework)'=='netcoreapp3.1'">true</DotNetStandard21>
		<DotNet5 Condition="'$(TargetFramework)'=='net5.0'">true</DotNet5>
		<DotNet6 Condition="'$(TargetFramework)'=='net6.0'">true</DotNet6>

		<DefineConstants Condition="'$(DotNetStandard20)'=='true'">$(DefineConstants);NETSTANDARD2_0</DefineConstants>
		<DefineConstants Condition="'$(DotNetStandard21)'=='true'">$(DefineConstants);NETSTANDARD2_1</DefineConstants>
		<DefineConstants Condition="'$(DotNet5)'=='true'">$(DefineConstants);NET5_0</DefineConstants>
		<DefineConstants Condition="'$(DotNet6)'=='true'">$(DefineConstants);NET6_0</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition="'$(DotNetStandard21)'=='true' OR '$(DotNet5)'=='true' OR '$(DotNet6)' == 'true'">
		<DefineConstants>$(DefineConstants);SSH_ENABLE_SPAN</DefineConstants>
		<DefineConstants>$(DefineConstants);SSH_ENABLE_AESGCM</DefineConstants>
		<DefineConstants>$(DefineConstants);SSH_ENABLE_PBKDF2</DefineConstants>
		<DefineConstants>$(DefineConstants);SSH_ENABLE_ECDH</DefineConstants>
	</PropertyGroup>

</Project>
